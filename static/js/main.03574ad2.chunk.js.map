{"version":3,"sources":["components/Board.js","index.js"],"names":["calculateWinner","moves","lines","i","length","a","b","c","Board","props","state","winner","squares","Array","fill","movesX","movesO","trunX","handleClick","bind","resetGame","winnerResetGame","this","indexOf","setState","sign","newSquares","document","getElementById","classList","add","className","remove","id","name","onClick","map","square","toString","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.03574ad2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction calculateWinner(moves) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (moves[a] && moves[a] === moves[b] && moves[a] === moves[c]) {\r\n        return moves[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nclass Board extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            winner: null,\r\n            squares: Array(9).fill(null),\r\n            movesX: [],\r\n            movesO: [],\r\n            trunX: true,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.resetGame = this.resetGame.bind(this);\r\n        this.winnerResetGame = this.winnerResetGame.bind(this);\r\n        \r\n    }\r\n    \r\n    handleClick(i){\r\n        if(this.state.movesX.indexOf(i) > -1 || this.state.movesO.indexOf(i) > -1){\r\n            \r\n        }\r\n        else{\r\n            //add moves to respective player's moves array\r\n            this.state.trunX ? (this.setState({movesX: [...this.state.movesX, i]})) : (this.setState({movesO: [...this.state.movesO, i]}));\r\n\r\n            //update moves to board i.e squares array\r\n            \r\n            const sign = this.state.trunX ? 'X' : 'O';\r\n            const newSquares = this.state.squares;\r\n            newSquares[i] = sign;\r\n\r\n            this.setState({squares:  newSquares})\r\n\r\n            //see if anyone have won\r\n            this.setState({winner: calculateWinner(this.state.squares)})\r\n            \r\n           \r\n            //flip the next player\r\n            this.setState({trunX: !this.state.trunX})\r\n\r\n\r\n        }\r\n    }\r\n\r\n    resetGame(){\r\n        this.setState({squares: Array(9).fill(null),})\r\n        this.setState({trunX: true})\r\n        this.setState({movesO: []})\r\n        this.setState({movesX: []})\r\n        this.setState({winner: null})\r\n    }\r\n    winnerResetGame(){\r\n        this.setState({squares: Array(9).fill(null),})\r\n        this.setState({trunX: true})\r\n        this.setState({movesO: []})\r\n        this.setState({movesX: []})\r\n        this.setState({winner: null})\r\n        document.getElementById(\"announcer\").classList.add(\"hidden\")\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            \r\n            <div className=\"game\">\r\n                {this.state.winner ? document.getElementById(\"announcer\").classList.remove(\"hidden\") :  ''}\r\n                <div id=\"announcer\" className=\"hidden\">\r\n                <div className=\"announcerBG\"></div>\r\n                <div className=\"announcer\">\r\n                    <h2>WINNER</h2>\r\n                    <h1>{this.state.winner}</h1>\r\n                    <button name=\"ok_button\" className=\"okBtn\" onClick={this.winnerResetGame.bind(this)}>OK</button>\r\n                </div>\r\n                </div>\r\n                <h2>XX Tic-Tac-Toe OO</h2>\r\n                <span><i>- By Kesu M.</i></span>\r\n                <div className=\"board\">\r\n                    {this.state.squares.map((square, i) => (\r\n                        <button name={square+\"square\"} className=\"square\" key={i.toString()} \r\n                            onClick={this.handleClick.bind(this, i)}>\r\n                                {this.state.squares[i]}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <button name=\"reset_button\" className=\"resetButton\" onClick={this.resetGame.bind(this)}>Reset Game</button>\r\n                <div className=\"bottomPanel\">\r\n                    <div className={\"playX \" + (this.state.trunX ? 'nowPlay': '')}>X</div>\r\n                    <div className={\"playO \" + (this.state.trunX ? '': 'nowPlay')}>O</div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Board;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Board from './components/Board';\n\nReactDOM.render(<Board />, document.getElementById(\"root\"));"],"sourceRoot":""}